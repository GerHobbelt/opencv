name: Push Build

runs-on: self-hosted

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

env:
  cuda_version: "10.2.89"
  opencv_version: '3.4.15'

jobs:
  pull-request:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout OpenCV
      uses: actions/checkout@v2
      with:
        clean: true
        fetch-depth: 1
        path: opencv

    - name: Checkout OpenCV_Contrib
      uses: actions/checkout@v2
      with:
        repository: opencv/opencv_contrib
        clean: true
        fetch-depth: 1
        path: opencv_contrib
        ref: ${{ env.opencv_version }}

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1.9.0
      with:
        arch: x86_64
        toolset: 16.0

    - name: Install CUDA
      uses: Jimver/cuda-toolkit@v0.2.4
      id: cuda-toolkit
      with:
        cuda: ${{ env.cuda_version }}

    - name: nvcc check
      shell: powershell
      run: |
        nvcc -V
        ls $env:CUDA_PATH
        ls $env:CUDA_PATH\bin
        ls $env:CUDA_PATH\include

    - name: CMake
      run: |
        $CLCompiler=(Get-Command cl.exe -TotalCount 1).Path
        $env:CUDA_HOST_COMPILER=$CLCompiler
        Write-Host "Compiling using host cl: $env:CUDA_HOST_COMPILER"      
        cmake -DWITH_CUDA=ON -DENABLE_FAST_MATH=1 -DCUDA_FAST_MATH=1 -DWITH_CUBLAS=1 -DCUDA_HOST_COMPILER="$env:CUDA_HOST_COMPILER" -DBUILD_WITH_DEBUG_INFO=OFF -DBUILD_PACKAGE=OFF -DBUILD_JAVA=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_DOCS=OFF -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DINSTALL_C_EXAMPLES=OFF -DINSTALL_TESTS=OFF -DOPENCV_EXTRA_MODULES_PATH=opencv_contrib/modules -S opencv -B build -G "Visual Studio 16 2019"

    - name: Build Release
      working-directory: ./build
      run: |
        msbuild /m /p:Configuration=Release OpenCV.sln /verbosity:detailed

    - name: nuget pack for non-tags
      run: |
        $Branch="${{ github.head_ref }}"
        $Branch=$Branch -replace "refs/heads/"
        $BuildDir=(Get-Item build).FullName
        Write-Host Building Nuget Package with:
        Write-Host BuildDir = $BuildDir
        Write-Host Version = ${{ env.opencv_version }}-dev
        Write-Host Branch = $Branch
        Write-Host Commit = ${{ github.sha }} 
        nuget pack opencv\package\nuget\opencv.nuspec -version ${{ env.opencv_version }}-dev -outputfilenameswithoutversion -outputdirectory dist -Properties branch=$Branch -Properties commit=${{ github.sha }} -Properties buildDir=$BuildDir  -BasePath opencv\package\nuget

    - name: upload package artifact
      uses: actions/upload-artifact@v2
      with:
        name: nuget
        path: dist\*.nupkg
