name: Push Build

on:
  push:

env:
  cuda: "10.2.89"
  opencv_contrib_ref: '3.4.15'

jobs:
  build-release:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout OpenCV
      uses: actions/checkout@v2
      with:
        clean: true
        fetch-depth: 1
        path: opencv

    - name: Checkout OpenCV_Contrib
      uses: actions/checkout@v2
      with:
        repository: opencv/opencv_contrib
        clean: true
        fetch-depth: 1
        path: opencv_contrib
        ref: ${{ env.opencv_contrib_ref }}

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1.9.0
      #with:
      #  arch: amd64
      #  toolset: 16.0

    - name: Install CUDA
      uses: Jimver/cuda-toolkit@v0.2.4
      id: cuda-toolkit
      with:
        cuda: ${{ env.cuda }}

    - name: nvcc check
      shell: powershell
      run: |
        nvcc -V
        ls $env:CUDA_PATH
        ls $env:CUDA_PATH\bin
        ls $env:CUDA_PATH\include

    - name: Show disk spaces
      run: wmic logicaldisk get size,freespace,caption

    - name: CMake
      run: cmake -DWITH_CUDA=ON -DENABLE_FAST_MATH=1 -DCUDA_FAST_MATH=1 -DWITH_CUBLAS=1 -DBUILD_WITH_DEBUG_INFO=OFF -DBUILD_PACKAGE=OFF -DBUILD_JAVA=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_DOCS=OFF -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DINSTALL_C_EXAMPLES=OFF -DINSTALL_TESTS=OFF -DOPENCV_EXTRA_MODULES_PATH=opencv_contrib/modules -S opencv -B build -G "Visual Studio 16 2019"

    - name: Build Release
      working-directory: ./build
      run: msbuild /m /p:Configuration=Release OpenCV.sln

    - name: upload artifact for release-bin
      uses: actions/upload-artifact@v2
      with:
        name: build-release-bin
        path: build/bin/**/*

    - name: upload artifact for release-lib
      uses: actions/upload-artifact@v2
      with:
        name: build-release-lib
        path: build/lib/**/*

    - name: upload artifact for release-opencv2
      uses: actions/upload-artifact@v2
      with:
        name: build-release-opencv2
        path: build/opencv2/**/*

  build-debug:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
    - name: Checkout OpenCV
      uses: actions/checkout@v2
      with:
        clean: true
        fetch-depth: 1
        path: opencv

    - name: Checkout OpenCV_Contrib
      uses: actions/checkout@v2
      with:
        repository: opencv/opencv_contrib
        clean: true
        fetch-depth: 1
        path: opencv_contrib
        ref: ${{ env.opencv_contrib_ref }}

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1.9.0
      #with:
      #  arch: amd64
      #  toolset: 16.0

    - name: Install CUDA
      uses: Jimver/cuda-toolkit@v0.2.3
      id: cuda-toolkit
      with:
        cuda: ${{ env.cuda }}

    - name: nvcc check
      shell: powershell
      run: |
        nvcc -V
        ls $env:CUDA_PATH
        ls $env:CUDA_PATH\bin
        ls $env:CUDA_PATH\include

    - name: Show disk spaces
      run: wmic logicaldisk get size,freespace,caption

    - name: CMake
      run: cmake -DWITH_CUDA=ON -DENABLE_FAST_MATH=1 -DCUDA_FAST_MATH=1 -DWITH_CUBLAS=1 -DBUILD_WITH_DEBUG_INFO=OFF -DBUILD_PACKAGE=OFF -DBUILD_JAVA=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_DOCS=OFF -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DINSTALL_C_EXAMPLES=OFF -DINSTALL_TESTS=OFF -DOPENCV_EXTRA_MODULES_PATH=opencv_contrib/modules -S opencv -B build -G "Visual Studio 16 2019"

    - name: Build Debug
      working-directory: ./build
      run: msbuild /m /p:Configuration=Debug OpenCV.sln /p:DebugSymbols=false /p:DebugType=None

    - name: upload artifact for debug-bin
      uses: actions/upload-artifact@v2
      with:
        name: build-debug-bin
        path: build/bin/**/*

    - name: upload artifact for debug-lib
      uses: actions/upload-artifact@v2
      with:
        name: build-debug-lib
        path: build/lib/**/*

    - name: upload artifact for debug-opencv2
      uses: actions/upload-artifact@v2
      with:
        name: build-debug-opencv2
        path: build/opencv2/**/*

  package:
    runs-on: windows-latest
    timeout-minutes: 360
    needs: [build-debug, build-release]

    steps:
    - name: Checkout OpenCV
      uses: actions/checkout@v2
      with:
        clean: true
        fetch-depth: 1
        path: opencv

    - name: Checkout OpenCV_Contrib
      uses: actions/checkout@v2
      with:
        repository: opencv/opencv_contrib
        clean: true
        fetch-depth: 1
        path: opencv_contrib
        ref: ${{ env.opencv_contrib_ref }}

    - name: Setup NuGet
      uses: nuget/setup-nuget@v1.0.5
      with:
        nuget-api-key: ${{ secrets.NuGetAPIKey }}
        nuget-version: '5.x'

    - name: Download release output - bin
      uses: actions/download-artifact@v2
      with:
        name: build-release-bin
        path: opencv/build/bin

    - name: Download release output - lib
      uses: actions/download-artifact@v2
      with:
        name: build-release-lib
        path: opencv/build/lib

    - name: Download release output - opencv2
      uses: actions/download-artifact@v2
      with:
        name: build-release-opencv2
        path: opencv/build/opencv2

    - name: Download debug output - bin
      uses: actions/download-artifact@v2
      with:
        name: build-debug-bin
        path: opencv/build/bin

    - name: Download debug output - lib
      uses: actions/download-artifact@v2
      with:
        name: build-debug-lib
        path: opencv/build/lib

    - name: Download debug output - opencv2
      uses: actions/download-artifact@v2
      with:
        name: build-debug-opencv2
        path: opencv/build/opencv2

    - name: Display structure of downloaded files
      run: dir
      working-directory: opencv/build

    - name: Display structure of package files
      run: dir -R package
      working-directory: opencv

    - name: nuget pack for non-tags
      working-directory: opencv
      if: "!startswith(github.ref, 'refs/tags/')"
      run: nuget pack package\nuget\opencv.nuspec -version 1.0.0-dev -outputfilenameswithoutversion -outputdirectory dist -Properties branch=${{GITHUB_REF##*/}} -Properties commit=${{GITHUB_SHA}}

    - name: upload package artifact
      uses: actions/upload-artifact@v2
      with:
        name: nuget
        path: opencv\dist\*.nupkg

    - name: extract tag name
      if: startswith(github.ref, 'refs/tags/')
      uses: olegtarasov/get-tag@v2.1.1
      id: tagname

    - name: nuget pack/push for tags
      if: startswith(github.ref, 'refs/tags/')
      working-directory: opencv
      run: |
        nuget pack package\nuget\opencv.nuspec -version ${{env.git_tag_name}} -outputfilenameswithoutversion -outputdirectory dist -Properties branch=${{env.git_tag_name}} -Properties commit=${{GITHUB_SHA}}
        nuget push dist\wuganhao.opencv.nupkg -apikey ${{secrets.nuget_api_key}} -source https://api.nuget.org/v3/index.json